import math
import matplotlib.pyplot as plt

# TA said it's good ¯\_(ツ)_/¯

def arange(start, stop, step):
    """
    Generate a list of numbers starting from `start` to `stop`,
    with a given step increment.

    Parameters:
    start (float): The starting value of the sequence.
    stop (float): The end value of the sequence (exclusive).
    step (float): The increment between values.

    Returns:
    list: A list of floating-point numbers incremented by `step`.
    """
    my_list = []  # Initialize an empty list

    # Loop until start reaches stop
    while start < stop:
        my_list.append(start)  # Append current value to the list
        start += step  # Increment the current value by step

    return my_list

# Initialize lists to store x and y coordinates for the plot
x_coords = []
y_coords = []

# Iterate through a range of values generated by the custom arange function
# Taking small steps in x (from 0 to 20 with a step of 0.1)
for a in arange(0, 20, 0.1):

    # Calculate the radius r as a function of a
    r = 10 - 0.5 * a

    # Calculate the x and y coordinates using polar-to-Cartesian conversion
    x = r * math.cos(a)
    y = r * math.sin(a)

    # Append the calculated x and y values to the lists
    x_coords.append(x)
    y_coords.append(y)

    # Plot the current coordinates on the graph
    plt.plot(x_coords, y_coords, 'bo')  # 'bo' means blue color with dots
    plt.xlim(-10, 10)  # Set x-axis limits
    plt.ylim(-10, 10)  # Set y-axis limits

    # Update the graph with the new points
    plt.draw()  # Draw the updated plot
    plt.pause(0.1)  # Pause to create an animation effect

    # Clear the graph for the next frame
    plt.clf()  # Clears the current figure to make next animation frame
